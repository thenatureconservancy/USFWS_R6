---
title: "Great Plains Fire Zone"
format: html
editor: source

---

```{r}
#| label: set up
#| message: false
#| warning: false
#| include: false

library(tidyverse)
library(scales)
library(stringr)

options(scipen = 99999999)

bps_data <- read.csv("data/great_plains/bps_aoi_attributes.csv")

evt_data <- read_csv(file = "data/great_plains/evt_aoi_attributes.csv")

evc_data <- read.csv("data/great_plains/evc_aoi_attributes.csv") 

evh_data <- read.csv("data/great_plains/evh_aoi_attributes.csv") 


# process fire data to get acres up front

all_annual_fire <-bps_data %>%
  mutate(annual_fire_acres = ((1/FRI_ALLFIR)*ACRES)) %>%
  filter(BPS_NAME != 'Open Water') %>%
  group_by(BPS_NAME) %>%
  summarize(acres = sum(annual_fire_acres)) %>%
  arrange(desc(acres))

annualFire <- all_annual_fire %>%
   top_n(n = 10, wt = acres)

```

## Historical Context

### LANDFIRE's Biophysical Settings (BpSs)

<br>

> *BpS models represent the vegetation system that may have been dominant on the landscape prior to Euro-American settlement. These models are based on a combination of the current environment and an approximation of the historical disturbance regime.* [Read more](https://landfire.gov/bps.php){target="blank"}.

Check out this 3-minute tutorial for a quick refresher on the [basics of Biophysical Settings Models](https://youtu.be/xjaWJCe7udQ){target="blank"}.

Use this page as a starting point to explore the most prevalent BpSs for your analysis area. In addition to the charts and maps, the historical disturbance data can be directly accessed using this site.

## Most prevalent Biophysical Settings

```{r bps chart, message=FALSE, warning=FALSE, echo=FALSE, fig.width=10, fig.height=10}


bpsname <- bps_data %>%
  group_by(BPS_NAME) %>%
  summarize(ACRES = sum(ACRES),
            REL_PERCENT = sum(REL_PERCENT)) %>%
  arrange(desc(REL_PERCENT)) %>%
  top_n(n = 10, wt = REL_PERCENT)

# plot
bpsChart <- 
  ggplot(data = bpsname, aes(x = BPS_NAME, y = REL_PERCENT)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Top 10 Biophysical Settings",
    subtitle = "Represents dominant vegetation systems pre-European colonization",
    caption = "Data from landfire.gov.",
    x = "",
    y = "Percent of landscape") +
  scale_x_discrete(limits = rev(bpsname$BPS_NAME),
                   labels = function(x) str_wrap(x, width = 18)) +
  coord_flip() +
  theme_bw(base_size = 14)


bpsChart
```

## Historical Fire Regimes

::: callout-note
[ **Prior to European colonization the Great Plains fire zone had `r formatC(sum(all_annual_fire$acres), format = "f", big.mark = ",", digits = 0)` acres of fire annually.** ]{style="font-size: 1.5em;"}
:::

```{r fire bar, echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=10}

# plot
fireChart <- 
  ggplot(data = annualFire, aes(x = BPS_NAME, y = acres)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Cumulative estimates of all fire types prior to pre-European colonization",
    subtitle = "",
    caption = "\nData from landfire.gov.",
    x = "",
    y = "Acres") +
  scale_x_discrete(limits = rev(annualFire$BPS_NAME),
                   labels = function(x) str_wrap(x, width = 18)) +
  scale_y_continuous(name = 'Acres', labels = comma) +
  coord_flip() +
  theme_bw(base_size = 14) +
  theme(plot.margin = margin(10, 30, 0, 0))

fireChart


```

<br> <br>

## Current Landscape

LANDFIRE's [Existing Vegetation Type, Cover and Height](https://landfire.gov/vegetation.php){target="blank"} datasets describe vegetation conditions.

-   Existing Vegetation Type (EVT) - represents the current distribution of the terrestrial ecological systems classification, developed by NatureServe for the western hemisphere, through 2016.
-   Existing Vegetation Cover (EVC) - represents the vertically projected percent cover of the live canopy layer for a 30-m cell.
-   Existing Vegetation Height (EVH) - represents the average height of the dominant vegetation for a 30-m cell.

[Read more about LANDFIRE Vegetation Products](https://landfire.gov/vegetation.php){target="blank"}


## Most Prevalent Existing Vegetation Types

```{r evt chart, fig.height=10, fig.width=10, message=FALSE, warning=FALSE}
#| echo: false
evtname <- evt_data  |> 
  group_by(EVT_NAME) |> 
  summarize(ACRES = sum(ACRES),
            REL_PERCENT = sum(REL_PERCENT)) |> 
  arrange(desc(REL_PERCENT)) |> 
  filter(!EVT_NAME %in% c("Open Water","Developed-Roads")) |> 
  top_n(n = 10, wt = REL_PERCENT)

# plot
evtChart <-
  ggplot(data = evtname, aes(x = EVT_NAME, y = REL_PERCENT)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Top 10 Existing Vegetation Types",
    caption = "Data from landfire.gov",
    x = "",
    y = "Percent of landscape") +
  scale_x_discrete(limits = rev(evtname$EVT_NAME),
                   labels = function(x) str_wrap(x, width = 18)) +
  coord_flip() +
  theme_bw(base_size = 14)



evtChart
```

<br>

## Existing Vegetation Cover

The Existing Vegetation Cover (EVC) map is a visual representation of EVC classifications across the subregion. The chart below the map provides a breakdown of each vegetation cover classification and their relative distribution across the forest.

```{r evc chart, echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=10}
evcname <- evc_data %>% 
  mutate(type = if_else(Value %in% 11, "Open Water",
                                             if_else(Value %in% 12, "Snow / Ice",
                                                     if_else(Value %in% c(13:25), "Developed",
                                                             if_else(Value %in% 31, "Barren",
                                                                     if_else(Value %in% c(60:70), "Agriculture",
                                                                             if_else(Value %in% 32, "Quarries",
                                                                                     if_else(Value %in% 100, "Sparse Vegetation",
                                                                                             if_else(Value %in% c(101:199), "Tree",
                                                                                                     if_else(Value %in% c(201:299), "Shrub",
                                                                                                             if_else(Value %in% c(301:399), "Herb",
                                                                                                                     "Other")))))))))))



# create reverse substr() function
revSubstr <- function(x, start, stop) {
  x <- strsplit(x, "")
  sapply(x, 
         function(x) paste(rev(rev(x)[start:stop]), collapse = ""), 
         USE.NAMES = FALSE)  }

# create cover column based on 2nd and 3rd to last Values of classname
# if "Other" type, make 0
evcname <- evcname %>% mutate(cover = as.numeric(if_else(Value > 100,
                                                         revSubstr(evcname$CLASSNAMES, start = 2, stop = 3),
                                                         "0")))

# create bin breaks for grouping
breaks <- seq(0, 100, 10)
# create intervals for grouping and summarize
# also create factor order for "type"
evcgroup <- evcname %>%
  mutate(interval = cut(cover,
                        breaks, 
                        include.lowest = TRUE, 
                        right = T,
                        labels = c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", 
                                   "80-89", "90-100")),
         type = factor(type, levels = c("Tree", "Shrub", "Herb", "Open Water", "Snow / Ice", "Developed", "Agriculture", "Sparse Vegetation", "Barren", "Quarries", "Other"))) %>%
  group_by(type, interval) %>%
  summarize(COUNT = sum(Freq),
            acres = sum(ACRES),
            rel_percent = sum(REL_PERCENT))

# add label and legend names based on condition
evcgroup <- evcgroup %>% mutate(label = if_else(type %in% c("Tree", "Shrub", "Herb"),
                                                paste0(type, " Cover = ", interval, "%"), as.character(type)),
                                legend = if_else(type %in% c("Tree", "Shrub", "Herb", "Open Water"),
                                                 type, as.factor("Other")))

# turn current label order to factors
evclabel.list <- evcgroup$label
evcgroup <- evcgroup %>% mutate(label = fct_rev(factor(label, evclabel.list)))

# join in custom cols column to color bars by specific label

evc_group_cols <- read.csv("data/evc_group_acc.csv")

evcgroup <- left_join(evcgroup, evc_group_cols, by = "label")

evcgroup$label <- factor(evcgroup$label, levels = rev(evcgroup$label))

evcgroup <- evcgroup %>%
  filter(rel_percent > 0.01)

# plot
evcChart <-
  ggplot(data = evcgroup, aes(x = label, y = rel_percent, fill = colors)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Existing Vegetation Cover",
    caption = "Data from landfire.gov",
    x = "Amount of landscape",
    y = "Most dominant lifeform") +
  scale_fill_identity() +
  coord_flip() +
  theme_classic(base_size = 12)+
  theme(legend.position = "none") 


evcChart

```

<br>

## Existing Vegetation Height

The Existing Vegetation Height (EVH) map showcases EVH across the forest. The chart below the map provides the percentage of the landscape represented by each EVH height.

```{r evh chart, echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=10}

# load evh attribute table
evhname <- evh_data %>% 
  mutate(type = if_else(Value %in% 11, "Open Water",
                                             if_else(Value %in% 12, "Snow / Ice",
                                                     if_else(Value %in% c(13:25), "Developed",
                                                             if_else(Value %in% 31, "Barren",
                                                                     if_else(Value %in% c(60:70), "Agriculture",
                                                                             if_else(Value %in% 32, "Quarries",
                                                                                     if_else(Value %in% 100, "Sparse Vegetation",
                                                                                             if_else(Value %in% c(101:199), "Tree",
                                                                                                     if_else(Value %in% c(201:299), "Shrub",
                                                                                                             if_else(Value %in% c(301:399), "Herb",
                                                                                                                     "Other"))))))))))) %>%
  mutate(height_m = if_else(type %in% "Tree", (Value -100),
                            if_else(type %in% "Shrub", ((Value - 200) / 10),
                                    if_else(type %in% "Herb", ((Value - 300) / 10), 0))) %>%
           as.character() %>% as.numeric())

# create bin breaks for grouping
breaks <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100)

# create intervals for grouping and summarize
# also create factor order for "type"
evhgroup <- evhname %>%
  mutate(interval = cut(height_m,
                        breaks, 
                        include.lowest = TRUE, 
                        right = F,
                        labels = c("0", "0.1-0.2", "0.2-0.3", "0.3-0.4" ,"0.4-0.5", "0.5-0.6", "0.6-0.7", "0.7-0.8", "0.8-0.9", "0.9-1.0", "1-5", "5-10", "10-15", "15-20", "20-25", "25-30", "30-35", "35-40", "40-45", "45-50", "50-55", "55-60", "60-65", "65-70", "70-75", "75-80", "80-85", "85-90", "90-95", "95-100")),
         type = factor(type, levels = c("Tree", "Shrub", "Herb", "Open Water", "Snow / Ice", "Developed", "Agriculture", "Sparse Vegetation", "Barren", "Quarries", "Other"))) %>%
  group_by(type, interval) %>%
  summarise(COUNT = sum(Freq),
            acres = sum(ACRES),
            rel_percent = sum(REL_PERCENT))



# add label and legend names based on condition
evhgroup <- evhgroup %>% mutate(label = if_else(type %in% c("Tree", "Shrub", "Herb"),
                                                paste0(type, " Height = ", interval, " m"), as.character(type)),
                                legend = if_else(type %in% c("Tree", "Shrub", "Herb", "Open Water"),
                                                 type, as.factor("Other")))
# turn current label order to factors
evhlabel.list <- evhgroup$label
evhgroup <- evhgroup %>% mutate(label = fct_rev(factor(label, evhlabel.list)))


# join in custom cols column to color bars by specific label

evh_group_cols <- read.csv("data/evh_group_acc.csv")

evhgroup <- left_join(evhgroup, evh_group_cols, by = "label")

evhgroup$label <- factor(evhgroup$label, levels = rev(evhgroup$label))

evhgroup <- evhgroup %>%
  filter(rel_percent > 0.01)


# plot
evhChart <-
ggplot(data = evhgroup, aes(x = label, y = rel_percent, fill = colors)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Existing Vegetation Height",
    subtitle = "",
    caption = "\nData from landfire.gov.",
    x = "",
    y = "Percent of landscape") +
  scale_fill_identity() +
  coord_flip() +
  theme_bw()

evhChart



# plot with original color scheme
# evhChart <-
# ggplot(data = evhgroup, aes(x = label, y = REL_PERCENT, fill = legend)) +
#   geom_bar(stat = "identity") +
#   labs(
#     title = "Existing Vegetation Height",
#     subtitle = "landscape_name",
#     caption = "Data from landfire.gov.",
#     x = "",
#     y = "percent of landscape") +
#   scale_fill_manual(Values = cols, name = "") +
#   coord_flip() +
#   theme_bw()
# 
# evhChart





```
